// Интерполяционный полином Ньютона.cpp
//=============================================================
/*
При создании интерполяционного полинома методом Ньютона
для полинома используется такое выражение: 
Pn(x)=a0+a1(x-x0)+a2(x-x0)(x-x1)+an(x-x0)(x-x1)...(x-xn-1)
Программа на основе массивов с узловыми точками и значениями
функции в узловых точках вычисляется интерполяционный полином
Ньютона
*/
//=============================================================

#include <iostream>
#include <cstdlib>

using namespace std;

//Функция вычмсления коэффициентов для полинома
void findA(double* a, double* x, double* y, int n)
{	//Переменная для записи произведения
	//разностей узловых точек
	double q;
	//Значение первого коэффициента для полинома
	a[0] = y[0];
	//Вычисление коэффициента для полинома
	for (int k = 1;k < n;k++) {
		//Начальное значение для коэффициента
		a[k] = y[k];
			//Начальное значение для произведения
			//разностей узловых точек
		q = 1;
		//Уточнение значения коэффициента и вычисление 
		//произведения разностей значений узловых точек
		for (int m = 0;m < k;m++) {
			a[k] -= a[m] * q;
			q *= (x[k] - x[m]);
		}
		//Окончательное значение коэффициента
		a[k] /= q;
	}
}

//Функция для вычисления полинорма Ньютона
double P(double* a, double z, double* x, int n)
{	//Переменная для записи результата функции
	double s = 0;
	//Локальная переменная для записи произведения
	//разностей значения аргумента и узловых точек
	double q;
	//Вычисление полиномной суммы
	for (int k = 0;k < n;k++) {
		//Начальное значение для произведения
		q = 1;
		for (int m = 0;m < k;m++) {
			//Вычисление произведения
			q *= (z - x[m]);
		}
		s += a[k] * q;
	}
	//Результат функции
	return s;
}

//Функция отображения линии
void line(int m)
{
	for (int k = 1;k <= m;k++) {
		cout << "-";
	}
	cout << endl;
}

int main()
{	//Изменение кодировки консоли
	system("chp 1251>nul");
	//Индексная переменная и длина линии
	int k, m = 20;
	//Размер массивов
	const int n= 5;
	//Узловые точки
	double x[n] = { 1, 2, 5, 7, 9 };
	//Значение функции в узловых точках
	double y[n] = { 0,2,-1,1,3 };
	//Коэффициенты для полинома Ньютона
	double a[n];
	//Вычисление значений для коэффициентов
	findA(a, x, y, n);
	cout << "x\t| P(x)\n";
	line(m);
	//Отображение узловых точек и значений
	//интерполяционного полинома в этих точках
	for (k = 0;k < n;k++) {
		cout << x[k] << "\t| " << P(a, x[k], x, n) << endl;

	}
	//Сдвиг для аргумента
	double dx = 1;
	line(m);
	cout << "x|t P(x)\n";
	line(m);
	//Значение аргумента и значения полинома
	for (k = 0;k < n;k++) {
		cout<<x[k]+dx<<"\t| "<< P(a, x[k]+dx, x, n) << endl;
	}
	system("pause>nul");
	return 0;

}

